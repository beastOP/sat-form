package templates

import (
    "strconv"
    "sat-form/database"
)

templ AppLayout() {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="https://unpkg.com/htmx.org@2.0.2" integrity="sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ" crossorigin="anonymous"></script>
        <script src="https://unpkg.com/htmx-ext-multi-swap@2.0.0/multi-swap.js"></script>
        <title>SAT Form</title>
    </head>
    <body hx-boost="true" hx-ext="multi-swap">
        {children...}
    </body>
    </html>
}

templ Index(satScores []database.SatScore) {
    @AppLayout() {
        <h1>SAT Form</h1>
        <div>
            <input type="text"  hx-get="/api/search-by-name" hx-target="#sat-scores" hx-swap="outerHTML" id="search-input" name="name" hx-trigger="keyup changed delay:500ms" placeholder="Search by name" />
        </div>
        <br />
        <button hx-get="/api/view-all-data" hx-target="#data-container" hx-swap="innerHTML">View All Data</button>
        <button hx-get="/" hx-target="body" hx-swap="innerHTML">Reset</button>
        <script>
            document.addEventListener('htmx:afterRequest', function(event) {
                if (event.detail.xhr.getResponseHeader('Content-Type') === 'application/json') {
                    const jsonResponse = JSON.parse(event.detail.xhr.responseText);
                    const prettyJson = JSON.stringify(jsonResponse, null, 2);
                    const pre = document.createElement('pre');
                    pre.style.whiteSpace = 'pre-wrap';
                    pre.style.wordWrap = 'break-word';
                    pre.style.padding = '10px';
                    pre.style.border = '1px solid #ccc';
                    pre.style.borderRadius = '5px';
                    pre.style.fontFamily = 'monospace';
                    pre.textContent = prettyJson;
                    document.getElementById('data-container').innerHTML = pre.outerHTML;
                }
            });
        </script>
        <div id="data-container">
            <br />
            @InputForm()
            <br />
            @Table(satScores)
        </div>
    }
}


templ InputForm() {
    <form id="sat-form" hx-post="/api/submit-sat-score" hx-swap="outerHTML" hx-target="#sat-scores" hx-on::after-request="if(event.detail.successful) this.reset()">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required />
        <label for="address">Address:</label>
        <input type="text" id="address" name="address" required />
        <label for="city">City:</label>
        <input type="text" id="city" name="city" required />
        <label for="country">Country:</label>
        <input type="text" id="country" name="country" required />
        <label for="pincode">Pincode:</label>
        <input type="text" id="pincode" name="pincode" required />
        <label for="sat_score">SAT Score:</label>
        <input type="number" id="sat_score" name="sat_score" required />
        <button type="submit">Submit</button>
    </form>
}

templ Error(message string) {
    <div class="error">{message}</div>
}

templ Table(satScores []database.SatScore) {
    <table id="sat-scores"> 
        <thead>
            <tr>
                <th>Rank</th>
                <th>Name</th>
                <th>SAT Score</th>
                <th>Passed</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            if len(satScores) == 0 {
                <tr>
                    <td colspan="4">No data found</td>
                </tr>
            } else {
                for _, satScore := range satScores {
                    @TableRow(satScore)
                }
            }
        </tbody>
    </table>
}


templ TableRow(satScore database.SatScore) {
    <tr>
        <td>{strconv.Itoa(int(satScore.Rank.Int64))}</td>
        <td>{satScore.Name}</td>
        <td>{strconv.Itoa(int(satScore.SatScore))}%</td>
        <td>{strconv.FormatBool(satScore.Passed)}</td>
        <td>
            <button hx-delete={"/api/delete-record?name=" + satScore.Name} hx-target="#sat-scores" hx-swap="outerHTML">Delete</button>
            <button hx-get={"/update-sat-score-form?name=" + satScore.Name} hx-target="#sat-form" hx-swap="outerHTML">Update</button>
        </td>
    </tr>
}

templ FormWithTable(satScores []database.SatScore) {
    @InputForm()
    @Table(satScores)
}

templ UpdateForm(name string, satScore int64) {
    <form id="sat-form" hx-post="/api/update-sat-score" hx-swap="multi:#sat-form:outerHTML,#sat-scores:outerHTML">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value={name} required />
        <label for="sat_score">SAT Score:</label>
        <input type="number" id="sat_score" name="sat_score" value={strconv.Itoa(int(satScore))} required />
        <button type="submit">Update</button>
        <button hx-get="/" hx-target="body" hx-swap="innerHTML">Cancel</button>
    </form>
}